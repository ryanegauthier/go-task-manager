version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: go-task-manager-postgres
    environment:
      POSTGRES_DB: taskmanager
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - go-task-manager-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Go Application
  app:
    build: .
    container_name: go-task-manager-app
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=taskmanager
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_SSLMODE=disable
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - PORT=8080
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - go-task-manager-network
    restart: unless-stopped

  # Redis for caching (optional for Phase 3)
  redis:
    image: redis:7-alpine
    container_name: go-task-manager-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - go-task-manager-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  go-task-manager-network:
    driver: bridge
